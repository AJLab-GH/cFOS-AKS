---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: ollama
  namespace: cluster-config
spec:
  targetNamespace: ollama
  releaseName: ollama
  chart:
    spec:
      chart: ollama
      sourceRef:
        kind: HelmRepository
        name: ollama
        namespace: cluster-config
      version: "0.x"
  interval: 10m0s
  install:
    timeout: 20m
    remediation:
      retries: 5
  upgrade:
    timeout: 20m
  values:
    initContainers:
      - name: init-myservice
        image: alpine/k8s:1.30.2
        command: ['sh', '-c', 'IPADDRESS=$(kubectl -n ollama get svc ollama -o json | jq -r ".spec.clusterIP"); JSONDATA=$(kubectl -n fos get configmaps fos-vip-template -o json | jq "{data,apiVersion,kind}"); YAMLDATA=$(echo $JSONDATA | yq -P | sed -e s/VAR_CLUSTER_IP/${IPADDRESS}/g); echo -e "---\nmetadata:\n  labels:\n    app: fos\n    category: config\n  name: dvwa-vip\n  namespace: fos\n$YAMLDATA" > manifest.yaml; kubectl apply -f manifest.yaml']
    runtimeClass: nvidia
    extraEnv:
      - name: OLLAMA_KEEP_ALIVE
        value: "-1"
    resources:
      limits:
        nvidia.com/gpu: "0"
      requests:
        nvidia.com/gpu: "0"
    image:
      tag: "latest"
    ollama:
      gpu:
        enabled: true
      models:
        - nomic-embed-text
        - codestral:latest
    ingress:
      enabled: true
      className: "nginx"
      hosts:
        - host: www.bankexample.com
          paths:
            - path: /
              pathType: Prefix
    persistentVolume:
      enabled: true
      size: 100Gi
